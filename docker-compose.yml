version: '3.8'

services:
  web:
    build: .
    command: gunicorn djangoCoolify.wsgi:application --bind 0.0.0.0:8000
    depends_on:
      - db
    environment:
      - DEBUG=${DEBUG:-False}
      # Configuración de la base de datos utilizando variables generadas automáticamente por Coolify
      - DATABASE_NAME=$SERVICE_BASE64_DBNAME
      - DATABASE_USER=$SERVICE_BASE64_DBUSER
      - DATABASE_PASSWORD=$SERVICE_PASSWORD_DBPASS
      - DATABASE_HOST=db
      - DATABASE_PORT=5432  # Puerto predeterminado de Postgres
      # Genera un FQDN para el servicio web
      - SERVICE_FQDN_WEB=/
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    labels:
      - traefik.enable=true
      - "traefik.http.routers.web.rule=Host(`${SERVICE_FQDN_WEB}`) && PathPrefix(`/`)"
      - traefik.http.routers.web.entryPoints=http
      - traefik.http.services.web.loadbalancer.server.port=8000

  db:
    image: postgres:16-alpine
    environment:
      # Configuración automática de la base de datos para la conexión del contenedor de PostgreSQL
      - POSTGRES_DB=$SERVICE_BASE64_DBNAME
      - POSTGRES_USER=$SERVICE_BASE64_DBUSER
      - POSTGRES_PASSWORD=$SERVICE_PASSWORD_DBPASS
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:
  static_volume:
  media_volume:
